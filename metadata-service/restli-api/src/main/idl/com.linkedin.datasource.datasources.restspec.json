{
  "annotations" : {
    "deprecated" : { }
  },
  "name" : "datasources",
  "namespace" : "com.linkedin.datasource",
  "path" : "/datasources",
  "schema" : "com.linkedin.datasource.Datasource",
  "doc" : "Deprecated! Use {@link EntityResource} instead.\n\ngenerated from: com.linkedin.metadata.resources.datasource.Datasources",
  "collection" : {
    "identifier" : {
      "name" : "datasource",
      "type" : "com.linkedin.datasource.DatasourceKey",
      "params" : "com.linkedin.restli.common.EmptyRecord"
    },
    "supports" : [ "batch_get", "get" ],
    "methods" : [ {
      "method" : "get",
      "parameters" : [ {
        "name" : "aspects",
        "type" : "{ \"type\" : \"array\", \"items\" : \"string\" }",
        "optional" : true
      } ]
    }, {
      "method" : "batch_get",
      "parameters" : [ {
        "name" : "aspects",
        "type" : "{ \"type\" : \"array\", \"items\" : \"string\" }",
        "optional" : true
      } ]
    } ],
    "finders" : [ {
      "name" : "filter",
      "doc" : "Retrieves the values for multiple entities obtained after filtering urns from local secondary index. Here the value is\n made up of latest versions of specified aspects. If no aspects are provided, value model will not contain any metadata aspect.\n\n <p>If no filter conditions are provided, then it returns values of given entity type.",
      "parameters" : [ {
        "name" : "filter",
        "type" : "com.linkedin.metadata.query.IndexFilter",
        "optional" : true,
        "doc" : "{@link IndexFilter} that defines the filter conditions"
      }, {
        "name" : "aspects",
        "type" : "{ \"type\" : \"array\", \"items\" : \"string\" }",
        "optional" : true,
        "doc" : "list of aspects to be returned in the VALUE model"
      }, {
        "name" : "urn",
        "type" : "string",
        "optional" : true,
        "doc" : "last urn of the previous fetched page. For the first page, this should be set as NULL"
      } ],
      "pagingSupported" : true
    }, {
      "name" : "search",
      "parameters" : [ {
        "name" : "input",
        "type" : "string"
      }, {
        "name" : "aspects",
        "type" : "{ \"type\" : \"array\", \"items\" : \"string\" }",
        "optional" : true
      }, {
        "name" : "filter",
        "type" : "com.linkedin.metadata.query.Filter",
        "optional" : true
      }, {
        "name" : "sort",
        "type" : "com.linkedin.metadata.query.SortCriterion",
        "optional" : true
      } ],
      "metadata" : {
        "type" : "com.linkedin.metadata.query.SearchResultMetadata"
      },
      "pagingSupported" : true
    } ],
    "actions" : [ {
      "name" : "autocomplete",
      "parameters" : [ {
        "name" : "query",
        "type" : "string"
      }, {
        "name" : "field",
        "type" : "string"
      }, {
        "name" : "filter",
        "type" : "com.linkedin.metadata.query.Filter"
      }, {
        "name" : "limit",
        "type" : "int"
      } ],
      "returns" : "com.linkedin.metadata.query.AutoCompleteResult"
    }, {
      "name" : "backfill",
      "parameters" : [ {
        "name" : "urn",
        "type" : "string"
      }, {
        "name" : "aspects",
        "type" : "{ \"type\" : \"array\", \"items\" : \"string\" }",
        "optional" : true
      } ],
      "returns" : "com.linkedin.metadata.restli.BackfillResult"
    }, {
      "name" : "browse",
      "parameters" : [ {
        "name" : "path",
        "type" : "string"
      }, {
        "name" : "filter",
        "type" : "com.linkedin.metadata.query.Filter",
        "optional" : true
      }, {
        "name" : "start",
        "type" : "int"
      }, {
        "name" : "limit",
        "type" : "int"
      } ],
      "returns" : "com.linkedin.metadata.query.BrowseResult"
    }, {
      "name" : "getBrowsePaths",
      "parameters" : [ {
        "name" : "urn",
        "type" : "com.linkedin.common.Urn"
      } ],
      "returns" : "{ \"type\" : \"array\", \"items\" : \"string\" }"
    }, {
      "name" : "getSnapshot",
      "parameters" : [ {
        "name" : "urn",
        "type" : "string"
      }, {
        "name" : "aspects",
        "type" : "{ \"type\" : \"array\", \"items\" : \"string\" }",
        "optional" : true
      } ],
      "returns" : "com.linkedin.metadata.snapshot.DatasourceSnapshot"
    }, {
      "name" : "ingest",
      "parameters" : [ {
        "name" : "snapshot",
        "type" : "com.linkedin.metadata.snapshot.DatasourceSnapshot"
      } ]
    } ],
    "entity" : {
      "path" : "/datasources/{datasource}",
      "subresources" : [ {
        "annotations" : {
          "deprecated" : { }
        },
        "name" : "deprecation",
        "namespace" : "com.linkedin.datasource",
        "path" : "/datasources/{datasource}/deprecation",
        "schema" : "com.linkedin.datasource.DatasourceDeprecation",
        "doc" : "Deprecated! Use {@link EntityResource} instead.\n\n Rest.li entry point: /datasources/{datasourceKey}/deprecation\n\ngenerated from: com.linkedin.metadata.resources.datasource.DeprecationResource",
        "collection" : {
          "identifier" : {
            "name" : "deprecationId",
            "type" : "long"
          },
          "supports" : [ "create", "get" ],
          "methods" : [ {
            "method" : "create"
          }, {
            "method" : "get"
          } ],
          "entity" : {
            "path" : "/datasources/{datasource}/deprecation/{deprecationId}"
          }
        }
      }, {
        "annotations" : {
          "deprecated" : { }
        },
        "name" : "institutionalMemory",
        "namespace" : "com.linkedin.datasource",
        "path" : "/datasources/{datasource}/institutionalMemory",
        "schema" : "com.linkedin.common.InstitutionalMemory",
        "doc" : "Deprecated! Use {@link EntityResource} instead.\n\n Rest.li entry point: /datasources/{datasourceKey}/institutionalMemory\n\ngenerated from: com.linkedin.metadata.resources.datasource.InstitutionalMemoryResource",
        "collection" : {
          "identifier" : {
            "name" : "institutionalMemoryId",
            "type" : "long"
          },
          "supports" : [ "create", "get" ],
          "methods" : [ {
            "method" : "create"
          }, {
            "method" : "get"
          } ],
          "entity" : {
            "path" : "/datasources/{datasource}/institutionalMemory/{institutionalMemoryId}"
          }
        }
      }, {
        "annotations" : {
          "deprecated" : { }
        },
        "name" : "rawOwnership",
        "namespace" : "com.linkedin.datasource",
        "path" : "/datasources/{datasource}/rawOwnership",
        "schema" : "com.linkedin.common.Ownership",
        "doc" : "Deprecated! Use {@link EntityResource} instead.\n\n Rest.li entry point: /datasources/{datasourceKey}/rawOwnership\n\ngenerated from: com.linkedin.metadata.resources.datasource.OwnershipResource",
        "collection" : {
          "identifier" : {
            "name" : "rawOwnershipId",
            "type" : "long"
          },
          "supports" : [ "create", "get" ],
          "methods" : [ {
            "method" : "create"
          }, {
            "method" : "get"
          } ],
          "entity" : {
            "path" : "/datasources/{datasource}/rawOwnership/{rawOwnershipId}"
          }
        }
      } ]
    }
  }
}