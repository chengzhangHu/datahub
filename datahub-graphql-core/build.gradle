plugins {
    id "io.github.kobylynskyi.graphql.codegen" version "4.1.1"
}
apply plugin: 'java'

dependencies {
    compile project(':metadata-service:restli-client')
    compile project(':metadata-service:auth')
    compile project(':metadata-io')
    compile project(':metadata-utils')

    compile externalDependency.graphqlJava
    compile externalDependency.antlr4Runtime
    compile externalDependency.antlr4
    compile externalDependency.guava

    compileOnly externalDependency.lombok
    annotationProcessor externalDependency.lombok

    testCompile externalDependency.mockito

    constraints {
        implementation("org.apache.logging.log4j:log4j-core:2.15.0") {
            because("previous versions are vulnerable to CVE-2021-44228")
        }
        implementation("org.apache.logging.log4j:log4j-api:2.15.0") {
            because("previous versions are vulnerable to CVE-2021-44228")
        }
    }
}

graphqlCodegen {
    // For options: https://github.com/kobylynskyi/graphql-java-codegen/blob/master/docs/codegen-options.md
    graphqlSchemaPaths = [
        "$projectDir/src/main/resources/entity.graphql".toString(),
        "$projectDir/src/main/resources/app.graphql".toString(),
        "$projectDir/src/main/resources/search.graphql".toString(),
        "$projectDir/src/main/resources/analytics.graphql".toString(),
        "$projectDir/src/main/resources/recommendation.graphql".toString(),
    ]
    outputDir = new File("$projectDir/src/mainGeneratedGraphQL/java")
    packageName = "com.linkedin.datahub.graphql.generated"
    generateApis = true
    modelValidationAnnotation = "@javax.annotation.Nonnull"
    customTypesMapping = [
            Long: "Long",
            Float: "Float"
    ]
}

tasks.withType(Checkstyle) {
    exclude "**/generated/**"
}

compileJava.dependsOn 'graphqlCodegen'
sourceSets.main.java.srcDir "$projectDir/src/mainGeneratedGraphQL/java"
